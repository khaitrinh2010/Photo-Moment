// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Album {
  id          String        @id @default(cuid())
  name        String
  userId      String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  inviteCode  String?       @unique // Optional invite code for album sharing
  images      Image[] // One album has many images
  AlbumInvite AlbumInvite[]
}

model Image {
  id        String   @id @default(cuid())
  imageUrl  String
  userId    String
  albumId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  album Album @relation(fields: [albumId], references: [id], onDelete: Cascade)
}

model AlbumInvite {
  id        String    @id @default(cuid())
  token     String    @unique
  albumId   String
  createdAt DateTime  @default(now())
  expiresAt DateTime? // Optional expiration
  revoked   Boolean   @default(false)
  canUpload Boolean   @default(true) // control upload permissions
  album     Album     @relation(fields: [albumId], references: [id], onDelete: Cascade)
}

